version: "3.8"

services:
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: threadly-kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: threadly-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

 
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: threadly-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 168

  notification-service:
    build:
      context: ./services/notification
    container_name: threadly-notification-service
    env_file: .env
    depends_on:
      - kafka
    ports:
      - "5003:5003"

  auth-service:
    build: ./services/auth
    ports:
      - "5001:5001"
    env_file:
      - .env
    depends_on:
      - db
  
  messaging-service:
    container_name: threadly-messaging-service
    build: ./services/messaging
    ports:
      - "5002:5002"
    env_file:
      - .env
    depends_on:
      - db
      - kafka

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: threadly_auth
      POSTGRES_USER: threadly
      POSTGRES_PASSWORD: secret
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"

volumes:
  pgdata:
